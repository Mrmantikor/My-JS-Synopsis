/* //! time() timeEnd()
console.time('for...of');
console.timeEnd('for...of');
*/
/* //! if else
const lang = prompt('How your love languages?');
if (lang === 'javascript') {
  console.log('Yes of course!!!');
} else {
  console.log('Are you sure?!');
}
*/


/*
TODO: –ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ –∑–∞–ø–∏—Ç—É—î —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–æ—Ç–æ—á–Ω—É –ø–æ–≥–æ–¥—É (—á–µ—Ä–µ–∑ prompt) —ñ –≤–∏–≤–æ–¥–∏—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∫–æ–Ω—Å–æ–ª—å. –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å "rainy", –ø—Ä–æ–≥—Ä–∞–º–∞ –≤–∏–≤–æ–¥–∏—Ç—å "take umbrella". –Ø–∫—â–æ "sunny" ‚Äî "take glasses". –Ø–∫—â–æ "cold" ‚Äî "dress warmer". –í —ñ–Ω—à–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö –≤–∏–≤–æ–¥–∏—Ç—å—Å—è "have a nice day".
const weather = prompt('How weather now?');
if (weather === 'rainy') {
  console.log('take umbrella');
} else if (weather === 'sunny') {
  console.log('take glasses');
} else if (weather === 'cold') {
  console.log('dress warmer');
} else {
  console.log('have a nice day');
}
*/
/*
const size = prompt('pizza size').trim().toLowerCase();

if (size === 'small') {
  console.log('Price: $800');
} else if (size === 'medium') {
  console.log('Price: $1200');
} else if (size === 'large') {
  console.log('Price: $1500');
} else { console.log(); }

*/







// ~ –ü—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ arguments
// const foo = function () {
//   console.log('arguments:', arguments);

//   const args = Array.from(arguments);

//   console.log('args:', args);

// //   // for (const arg of arguments) {
// //   //   console.log(arg);
// //   // }
// };

// foo('Hello', 'World', 'World', 'World', 'World', 'World');

/*
TODO: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é add –¥–ª—è —Å–∫–ª–∞–¥–∞–Ω–Ω—è –¥–æ–≤—ñ–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ (—á–∏—Å–µ–ª)
*/

// const add = function () {
//   console.log('arguments:', arguments);

//   let total = 0;

//   for (const arg of arguments) {
//     total += arg;
//   }

//   return total;
// };

// console.log(add(1, 2, 3));
// console.log(add(1, 2, 4, 5, 6));

/*
TODO: –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é calculateAverage(), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —á–∏—Å–ª–æ–≤–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
TODO: —Ç–∞ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î —Å–µ—Ä–µ–¥–Ω—î –∞—Ä–µ—Ñ–º–µ—Ç–∏—á–Ω–µ.
*/

// const calculateAverage = function () {
//   console.log('arguments:', arguments);

//   let total = 0;

//   for (const arg of arguments) {
//     total += arg;
//   }

//   return total / arguments.length;
// };

// console.log(calculateAverage(1, 2, 3, 4)); // 2.5
// console.log(calculateAverage(14, 8, 2)); // 8
// console.log(calculateAverage(27, 43, 2, 8, 36)); // 23.2

/*
TODO: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é getRectArea(dimensions) –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
TODO: –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –±—É–¥–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –¥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ dimensions —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
TODO: –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
*/

// const getRectArea = function (dimensions) {
//   const sidesArr = dimensions.split(' ');

//   return Number(sidesArr[0]) * Number(sidesArr[1]);
// };

// console.log(getRectArea('8 11')); // 88
// console.log(getRectArea('18 11')); // 198
// console.log(getRectArea('8 21')); // 168

/*
TODO: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(items), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª,
TODO: —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É
TODO: —Ñ–æ—Ä–º–∞—Ç—ñ <–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
TODO: –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
TODO:
TODO: –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑
TODO: —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ 3 - Ajax.
*/

// const logItems = function (items) {
//   console.log('items:', items);

//   for (let i = 0; i < items.length; i++) {
//     console.log(`${i + 1} - ${items[i]}`);
//   }
// };

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

/*
TODO: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é printInfo(names, phones) —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å
TODO: —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
TODO: names —Ç–∞ phones –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
TODO: —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö
TODO: –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤
TODO: –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
*/

// const printInfo = function (names, phones) {
//   names = names.split(',');
//   phones = phones.split(',');

//   for (let i = 0; i < names.length; i++) {
//     console.log(`${names[i]} - ${phones[i]}`);
//   }
// };

// printInfo('Jacob,William,Solomon,Artemis', '89001234567,89001112233,890055566377,890055566300');
// printInfo('Marion,Eugenia,Dean,Jesus', '8577702524,9125002644,2028646420,9364154932');

/*
TODO: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(totalMinutes) —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è
TODO: minutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω —Ç–∞ —Ö–≤–∏–ª–∏–Ω HH:MM.
*/

// const formatTime = function (totalMinutes) {
//   const hours = Math.floor(totalMinutes / 60);
//   const minutes = totalMinutes % 60;

//   return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;
// };

// console.log(formatTime(70)); // "01:10"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"

/*
TODO: –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –∫—É—Ä—Å—ñ–≤ courses:
TODO: addCourse(name) - –¥–æ–¥–∞—î –∫—É—Ä—Å –≤ –∫—ñ–Ω–µ—Ü—å –∫–æ–ª–µ–∫—Ü—ñ—ó
TODO: removeCourse(name) - –≤–∏–¥–∞–ª—è—î –∫—É—Ä—Å –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó
TODO: updateCourse(oldName, newName) - –∑–º—ñ–Ω—é—î –Ω–∞–∑–≤—É –∫—É—Ä—Å–∞
*/

// const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];

// console.log('courses:', courses);

// const addCourse = function (courseName) {
//   if (courses.includes(courseName)) {
//     console.log(`–£ –≤–∞—Å –≤–∂–µ —î –∫—É—Ä—Å ${courseName}`);
//   } else {
//     courses.push(courseName);
//   }
// };

// const removeCourse = function (courseName) {
//   const indexOfCourse = courses.indexOf(courseName);

//   if (indexOfCourse === -1) {
//     console.log(`${courseName} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!`);
//   } else {
//     courses.splice(indexOfCourse, 1);
//   }
// };

// const updateCourse = function (oldCourseName, newCourseName) {
//   const indexOfCourse = courses.indexOf(oldCourseName);

//   if (indexOfCourse === -1) {
//     console.log(`${oldCourseName} –≤–∂–µ –Ω–µ–º–∞—î`);
//   } else {
//     courses.splice(indexOfCourse, 1, newCourseName);
//   }
// };

// addCourse('Express');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']
// addCourse('CSS'); // '–£ –≤–∞—Å –≤–∂–µ —î —Ç–∞–∫–∏–π –∫—É—Ä—Å'

// removeCourse('React');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']
// removeCourse('React'); // '–ö—É—Ä—Å –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'

// updateCourse('Express', 'NestJS');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']

/*
TODO: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é checkCaseOfLetter(letter), —è–∫–∞ –±—É–¥–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —Ä–µ–≥—ñ—Å—Ç—Ä –ª—ñ—Ç–µ—Ä–∏.
TODO: –í –ø–∞—Ä–∞–º–µ—Ç—Ä letter –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —Ä—è–¥–æ–∫ —ñ–∑ –æ–¥–Ω—ñ—î—é –ª—ñ—Ç–µ—Ä–æ—é.
TODO: –Ø–∫—â–æ –ª—ñ—Ç–µ—Ä–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É –≤–µ—Ä—Ö–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ, —Ç–æ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏—Å—è 'upper case' —ñ–Ω–∞–∫—à–µ 'lower case'.
*/

// const checkCaseOfLetter = function (letter) {
//   return letter === letter.toUpperCase() ? 'upper case' : 'lower case';
// };

// console.log(checkCaseOfLetter('a')); // 'lower case'
// console.log(checkCaseOfLetter('A')); // 'upper case'

/*
TODO: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é changeCaseOfLetters(str), —è–∫–∞ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Ä—è–¥–æ–∫ —ñ–∑ –∑–º—ñ–Ω–µ–Ω–∏–º —Ä–µ–≥—ñ—Å—Ç—Ä–æ–º –ª—ñ—Ç–µ—Ä.
TODO: –í –ø–∞—Ä–∞–º–µ—Ç—Ä str –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —Ä—è–¥–æ–∫.
*/

// const changeCaseOfLetters = function (str) {
//   console.log('str:', str);

//   let resultStr = '';

//   for (const char of str) {
//     if (char === char.toUpperCase()) {
//       resultStr += char.toLowerCase();
//     } else {
//       resultStr += char.toUpperCase();
//     }
//   }

//   return resultStr;
// };

// console.log(changeCaseOfLetters('AbCdE')); // aBcDe
// console.log(changeCaseOfLetters('abc')); // ABC
// console.log(changeCaseOfLetters('CBA')); // cba

// TODO: –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é countVowels(str), —è–∫–∞ —Ä–∞—Ö—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–ª–æ—Å–Ω–∏—Ö –ª—ñ—Ç–µ—Ä (a, e, i, o, u) —É —Ä—è–¥–∫—É.

// const countVowels = function (str) {
//   const vowels = 'aeiouAEIOU';

//   let count = 0;

//   for (const char of str) {
//     if (vowels.includes(char)) {
//       count++;
//     }
//   }

//   return count;
// };

// console.log(countVowels('Hello World!')); // 3
// console.log(countVowels('I love JavaScript!')); // 6
// console.log(countVowels('JavaScript is a lightweight interpreted programming language.')); // 19



